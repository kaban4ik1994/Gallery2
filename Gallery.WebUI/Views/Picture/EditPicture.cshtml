@using Gallery.Util.Conrete
@using Gallery.WebUI.Helpers
@using Gallery.WebUI.Models.Image
@model Gallery.WebUI.Models.Picture.PictureViewModel

@{
    ViewBag.Title = "Edit " + Model.Name + " Painter";
}

<div class="row">
    <div class="col-md-12">

        <div class="col-md-offset-1 title">
            <h1>@ViewBag.Title</h1>
        </div>

        <section id="editDepartament-form">
            @using (Html.BeginForm("EditPicture", "Picture", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.EditorFor(x => x.Id);
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                        @Html.EditorFor(x => x.Name)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.Partial("ImageSummary", new ImageViewModel { Width = 300, Height = 400, Image = ImageHelper.FilterImagesByMaxHeightAndMaxWidth(new ImageUtil(ConfigHeper.ImageApiUrl), Model.Id, 200, 200, 400, 400) })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.DropDownListFor(x => x.DepartamentId, Model.DepartamentSelectionList, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.DropDownListFor(x => x.GenreId, Model.GenreSelectionList, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.DropDownListFor(x => x.PainterId, Model.PainterSelectionList, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <input type="file" name="imageData" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <input type="submit" class="btn btn-success" value="Submit" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


