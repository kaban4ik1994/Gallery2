@using Gallery.Models.Models
@using Gallery.Util.Conrete
@using Gallery.WebUI.Helpers
@using Gallery.WebUI.Models.Image
@model Gallery.WebUI.Models.Picture.PictureViewModel

@{
    ViewBag.Title = Model.Name;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript">
        function comment() {
            var content = $('#comment').val();
            if (content.length == 0) return false;
            $.post('@Url.Action("Comment", "Home")', { id: @Model.Id, content: content }, function(data) {
                window.location.href='@Url.Action("Detail","Home", new{id=Model.Id})';
            });
        };
    </script>
}

<div class="row">
    <div class="col-md-12">

        <div class="col-md-offset-1 col-md-10 title">
            <h1>@ViewBag.Title</h1>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10 text-info">
                @Html.LabelFor(x => x.Name, new { @class = "text-danger" })
                @Html.DisplayFor(x => x.Name)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10 text-info">
                @Html.LabelFor(x => x.DepartamentName, new { @class = "text-danger" })
                @Html.DisplayFor(x => x.DepartamentName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10 text-info">
                @Html.LabelFor(x => x.PainterName, new { @class = "text-danger" })
                @Html.DisplayFor(x => x.PainterName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10 text-info">
                @Html.LabelFor(x => x.GenreName, new { @class = "text-danger" })
                @Html.DisplayFor(x => x.GenreName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10 text-center">
                @Html.Partial("ImageSummary", new ImageViewModel { Width = 300, Height = 400, Image = ImageHelper.FilterImagesByMaxHeightAndMaxWidth(new ImageUtil(ConfigHeper.ImageApiUrl), Model.Id, 200, 200, 400, 400) })
            </div>
        </div>

        <div class="form-group">
            @foreach (var comment in Model.Comments)
            {
                <div class="col-md-offset-1 col-md-10 comment-block">
                    <div>
                        @*@comment.User.UserName*@
                    </div>

                    <div class="pull-right">
                        @comment.CreatedDate.ToString("f")
                    </div>
                    <br />
                    <div>
                        @comment.Content
                    </div>
                </div>
            }
        </div>

        <div class="form-group">

            <div class="col-md-offset-1 col-md-10">
                <h3>New Comment</h3>
                <textarea id="comment" class="comment" rows="10"></textarea>
            </div>
            <div class="col-md-10 col-md-offset-1">
                <input type="button" class="btn btn-info" value="Comment" onclick="comment()" />
            </div>
        </div>
    </div>
</div>
